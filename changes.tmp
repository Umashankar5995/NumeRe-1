Removed	Deprecated functions have been removed.
Fixed	Resolved a crash, which occured, if one pressed a non-navigation key (i.e. a usual character or a function key) if the keyboard focus was in the dependency tree, the revision tree, the variable list tree or the variable list tree in the debugger (library issue).
Cleaned	The ESC key will now only abort the current calculation, if the terminal has the keyboard focus.
New	The function "regex()" can be used to apply a regular exprsssion on a string.
Fixed	Resolved an issue, where such an expression may not be sucessfully detected as string expression (note the similar var names): re2 = re.sub(1,10)
Updated	Improved some error messages to contain more relevant information.
Applied	Pasting or loading of tabular data, which contains only tabulators as separator characters, is now able to correctly determine the column layout even if some of them are not filled completely.
Cleaned	The two configuration files were merged into numere.ini.
Applied	It's now possible to extract single or multiple channels from image files by using the new "channels=CHANNELS" option.
New	The command "close" may be used to close many floating windows at once.
Added	Multiple expansions and vectors may now be combined into a single vector: {a,b,c:d,e,...}
New	The function "strip()" may be used to remove pre- and suffixes from strings.
Cleaned	The "list" command may now be used also without the "parameter-dash"
New	The function "dectobase()" may be used to convert integer values in the decimal base to the hexadecimal, octal or binary base.
New	The function "basetodec()" may be used to convert values in either the hexadecimal, the octal or the binary base into integer values in the decimal base.
New	It is now possible to extract styled text from the editor converted to preformatted HTML and copied directly to the clipboard.
Applied	The user may now select to use whitespaces instead of tabs for indentiation.
Cleaned	Clicking on the "New file" icon on the toolbar will now prompt a selection dialog instead of opening an empty new file to avoid confusion of new users expecting syntax highlighting.
Added	The user may now select and delete a whole block of text in the current input line in the terminal.
New	NumeRe can now detect structures in 2D datagrids using the command "detect".
Fixed	The context menu in the Refactorer is now working as expected.
New	The function "perlin(x,y,z,seed,freq,oct,pers)" will create Perlin noise for the selected coordinates.
New	The command "window" provides interaction with custom created GUI windows.
New	The file type "*.nlyt" (NumeRe layout file) can be used to design custom GUI windows.
New	Procedures may be used as event handlers for custom GUI windows.
Fixed	The horizontal scrollbar now tracks the needed width of the lines currently visible.
Applied	Replaced "wxStyledTextCtrl::LoadFile()" with "NumeReEditor::LoadFileText()" to resolve issue #558. Because the issue is not reproducable, it's unclear, whether this replacement fixes the issue.
New	It is now possible to create animations from data points.
New	NumeRe now has commands for rotatingtables (tabrot), images (imrot) and datagrids (gridrot).
New	NumeRe now features a particle swarm optimizier for up to four-dimensional functions (pso).
Applied	Window layouts are now installable and the package creator can detect their dependencies.
New	The documentation keyword '\return' may now be used to declare return values of procedures.
Added	It's now possible to define a license for a package or a plugin, which has to be accepted during installation.
Added	"read " and "write" are now capable of keeping empty lines, if the option "keepdim" is appended to them.
Applied	The loading option "totable" will now accept a target table "totable=TARGET()" used for loading.
Cleaned	Procedure arguments are now real variables. If one wants to use referencing logics, he or she has to use an additional ampersand in the arguments declaration to mark it as such.
Fixed	Resolved an issue, where clusters used in a comparison like 'c{} == ""' were overwritten in the process with the result of the first comparison.
New	The command "assert" can be used to check the trueness of expressions comfortably. It is intended for usage as part of software tests.
Added	The procedure flag "test" marks the procedure as a software test. Errors are catched in this procedure and displayed as warnings instead; the code execution is continued afterwards. However, severe internal errors won't be catched.
