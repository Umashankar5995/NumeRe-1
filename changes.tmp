New	NumeRe now support complex numbers. Complex numbers may be entered using a number followed by the letter "i" or by using the function "complex()"
Added	Functions for complex numbers were added: "real()", "imag()", "to_rect()", "to_polar()", "conj()" and "complex()"
Cleaned	Underscores in table heads are now visible in the table viewer and all table printing functionalities.
Added	The string justify function to align strings in a vector of strings according to the mode chosen.
New	Tables can now contain complex values
New	Tables can now contain strings in distinct columns
Applied	Enhanced displaying speed of tables in the table viewer
Applied	NDAT file tooltips now display the NDAT file version instead of the NumeRe file version
Applied	Code snippets in the documentation browser are now highlighted with an additional grey background
Applied	The table editor has full flexibilty regarding string and value columns. If the values change, the column will try to convert itself to a more fitting type
Applied	String columns or tables containing strings in arbitrary locations can now be pasted into the table editor
Cleaned	"String-only" tables (i.e. tables with string columns) use the frist line always as column headings
Added	The feature to select only applicable commands from the command history based on the characters already entered by the user
Applied	The fft algorithm makes now use of the new built-in complex numbers.
Fixed	The fft algorithm will now adapt the number of input data points to match an even number, if larger than 1000 data points. This should enhance the speed of FFTs with data point counts of prime numbers.
Fixed	Resolved an issue in cache file loading introduced with the new data model.
Fixed	Resolved the wrong extraction of table rows in the "datagrid" command.
New	The command "fft2d" provides a 2D FFT.
Fixed	The static code analyzer won't append a trailing semicolon to the variable list and warn about an unused variable anymore.
Applied	Matrix functions now make use of OpenMP wherever reasonable and possible.
Applied	Tables now make use of OpenMP wherever reasonable and possible.
Fixed	The commands "clear" and "delete" do not throw an error, if the tables do not exist.
Fixed	Selecting multiple rows or columns in the table viewer will now yield the correct statistics.
Fixed	The long loading time of tables was reduced.
Cleaned	The unusable dialogs at higher display scales are now usable again.
Fixed	Command sequences shouldn't be usable in flow control statement headers.
Fixed	The name mangling of external procedures should now also work with non-alphanumeric characters in the paths.
Cleaned	Procedure names and namespaces can now only be created with alphanumeric characters (others are replaced on-the-fly).
Added	The static code analyzer now presents an error, if the user calls a procedure with invalid characters in its name.
Fixed	The command sequence "load FILE -totable -i" will now correctly clear the target table in advance.
Cleaned	The debugger is now less subtle when needing the users attention. Furthermore, there's a setting value to enable taskbar flashing.
Added	A setting for the brace autocompletion was added - it's now possible to turn it off.
Added	A setting for autosaving all files before execution was added.
Fixed	More meaningful errors are thrown, if the user uses invalid characters for their procedure arguments or variables or if they've been overwritten by a "declare" statement.
Added	The static code analyzer will throw an error, if a "declare" statement will overwrite a procedure argument or variable.
Cleaned	The editor will now highlight complex numbers as actual numbers.
Applied	The lexer and the block hightlighter of the editor are now using the NumeReSyntax object to determine the blocks and the code folding points.
Fixed	(Partly) The smoothing filters are now using a buffer in 1D case to avoid erronous overwrites of data still needed for further smoothing windows.
Added	The static code analyzer will now mark functions, which do not work in a specific context (e.g. "matop") as errors.
Added	Procedures flagged as "test" will automatically create a local cluster named "TESTINFO{}" containing the test statistics.
Removed	The restriction to use each local variable declaration command ("var", "str", ...) exactly once has been removed.
Fixed	Table columns and expressions can now be used for clusters in inlined procedures.
Cleaned	Renamed "type" to "method" in "smooth" and "fwt", because this is semantically more correct.
Applied	"resample" can now be configured to accept two different sample counts and the filter for the "method" can be selected as well.
Applied	The documentation browser now displays all articles in tabs instead of opening new windows.
New	A "try...catch...endtry" control flow statement is now available.
Added	"declare" can now be used in layout scribts as well.
Added	A new column type for date-time-values was added. Those values are now also automatically detected when read from a text file (if following certain patterns).
Added	Two new table methods allow asking table columns for their type and converting them (if possible).
Cleaned	Improved the method of creating new table inplace methods.
Updated	Changed the internal time representation to std::chrono and improved the precision to microseconds.
Applied	"declare" can now be used in layout scripts as well.
Fixed	The menu entry field for GUI plugins in the package creator accepts now whitespaces.
Updated	"to_time()" and "timeformat()" now support milli- and microseconds via the characters "i" and "u".
New	The matop function "polylength()" can be used to calculate the length of a n-D open ended poylgon (repeat the first vertex at the end to calculate the perimeter of a closed polygon).
Updated	The variable viewer now supports more functionalities (including copying a value to clipboard) and displays the current needed memory of each variable.
Updated	The "list plugins" command now writes a well formated table that is adapted to the display size. Improved the methods handling the line breaks and display of strings.
Fixed	The command "smooth" now uses buffers in 1D and 2D cases. Additionally resolved a small logic error ignoring the last points in the arrays.
Fixed	The "zooming bug" of the graph viewer has been removed. Additionally, inverse zooming is now possible with the right mouse button.
Updated	The commands "diff" and "taylor" now use the differentiation method of Savitzky and Golay to derive their numbers.
New	The command "clc" is now available to clear the content of the terminal window and reset it to the startup state.
Updated	The new language file structure requires an additional load command for the new language file. Added this load command.
Cleaned	Improved the implementation of the plotting algorithm
Added	Plotting modes for complex-valued results are now available: use "complexmode=reim" to display real and imaginary data together and "complexmode=plane" to use the x-y plane as the complex plane.
Applied	Made new colour maps and revisited already available ones to have less strong gradients.
Cleaned	Added more documentation comments to the PlotData class.
Applied	The function "zeta(x)" now also accepts complex numbers as input.
New	It's now possible to add a documenation to tables. This documentation will also be displayed in the file tree. The documentation can either be modified using table methods ("TABLE().describe(DESCR)" and "TABLE().description") or via the GUI elements used for displaying and editing tables.
New	The matrix operations mode knows now a set of moving statistics functions like "movsum()", "movavg()" or "movmed()". The window is configurable and is rectangular.
Fixed	The axes of non-square images are now loaded correctly using "imread".
Fixed	The superfluous indent during procedure installs will now be omitted.
Fixed	The y and z intervals of fits will now work as expected.
Added	For angles really close to multiples of 90 degrees, a nearly lossless optimisation of the rotation is used.
Updated	NumeRe's internal logger was updated to gather more information during runtime with a more precise time measurement.
Fixed	Resolved a bug witin "assert", where it evaluated intermediate calculation steps within string expressions.
Fixed	The from the dependency viewer generated DOT file is now correct and displays all namespaces as their own cluster.
Added	The terminal now features also tooltips, which show the signatures of the current syntax element.
Added	The editor may now show a vertical line right after a 120 character line length.
